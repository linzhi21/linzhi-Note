

	早上复习
	
	
		商品详情：用户输入购买的数据、点击 +、-，直接将数据发送给后端
		
		购物  车：需要差值， 实际需要购买的 - 之前需要购买的数量 = 差值
		
		----
		
		Element
	
	
	今日目标
	
	
		1. 登录
		
		2. 处理 Token
		
		3. 获取、处理用户信息
		
		4. Vue Router 导航守卫、路由守卫
		
		5. 退出
		
		6. 提交订单 (交易路由、提交订单)
		
	
	课程内容
	
	
	
	3. 登录-完成登录功能  18226621111
	
	
		①. 分析接口文档，查看需要使用什么参数
		
		   data 声明这些字段、和组件进行绑定
		   
		   
		②. 点击登录，需要调用 API，需要封装 API 
		
		
		③. 点击登录，调用 API
		
			需要给用户提示
			
			
			
	4. 登录-对 token 的理解
	
	
	5. 登录-token 持久化存储
	
	
		①. 	就可以将 【存】 【取】 封装成两个方法
	
	
		②.  登录成功后需要将 Token 存储到本地
		
			存储的方式采用 localStorage
		
		③. 存储起来的 Token 以后需要在请求头中进行携带，携带到服务器，服务器需要进行验证
		
			在 request.js 请求拦截器中进行取
			
			
	
	6. 登录-获取用户信息存入 vuex
	
	
		存储的不是登录接口返回的，需要调用获取用户信息的接口获取数据
		
		
		① 根据接口文档封装 API
		
		② 所以获取用户信息，需要通过 action 来进行操作
		
		③ 需要声明 mutations 将返回的数据对 state 里面的数据进行赋值
		
		④ 点击登录，有 token 了，触发 action 获取用户信息即可
		
			-- 调用 action 暂时先在登录中触发，
			
			-- 下午的时候会进行优化处理
		
		
		
	7. 用户信息如何不丢失
	
	
		对 Vuex 而言，页面不刷新，路由跳转，Vuex 数据都不丢失
		
		对组件中数据而言：页面不刷新，路由跳转，对 data 中赋值的数据会丢失，引入组件会被销毁，数据就会丢失
		
		为什么 Vuex 数据不丢失：
		
			Vuex 是脱离组件而存在的
			
			Vuex 数据实际上都是存储到内存中的，所以不能刷新，刷新了，内存就会清空，数据就会丢失
			
			组件的数据之所以销毁，是因为组件销毁了，组件销毁属性 Vue 提供的钩子函数
			
			
		------------------------ 
		
		刷新以后 Vuex 数据会丢失，如何让 Vuex 数据不丢失 
		
		
		1. 本地存储
		
			将用户信息存储到本地，在使用的地方取出来。
			
			可行，但是不建议 (如果项目只是 PC、手机 项目没问题)
			
				PC 、 手机 访问一个项目
				
				PC 中将数据存储到本地了，手机上将用户信息更改了 ！ name: 张三 → 李四
				
				PC 上会先从本地存储里面读取数据，这样存在 手机 和 PC 用户信息，不一致的情况
				
				如果想获取最新的信息，需要再次发请求，才能够获取
				
				
		
		2. 在每个组件中都调用 dispatch
		
			PC 、 手机 访问一个项目
				
			PC 中将数据不存储到本地了，需要获取用户信息需要 dispatch
			
			a \ b \ c \ d ..... 多个页面都需要使用用户信息，多次调用 dispatch
			
			
			手机上将用户信息更改了 ！ name: 张三 → 李四，
			
			因为目前是在每个组件中都 调用 dispatch，获取的的确都是最新的数据信息
			
			但是每个页面都调用 dispatch ，代码太冗余了
			
			
		
		
		3. 放置到 App.vue 中 
		
		   既然不能够将 dispatch 的调用放到每个组件中，可不可放到根组件中的呢 ？
		   
		   可以，但是依然不建议
		   
		   
				第一次登录的时候(需要将 token 删除代表是第一次登录)，跳转到 Home 页面 
				
				Home 页面第一次加载的时候，是获取不到数据的
				
				因为 App.vue 只加载一次，以后所有路由的改变，加载的是路由对应的组件
				
				根组件不会说每次路由改变，都会重新加载的
				
				除非登录的时候调用一次 dispatch 然后在 App.vue 中也调用一次  dispatch
				
				
				
		4. 那么以后开发中如何管理用户的信息呢 ！
		
			导航守卫 ！
			
				① dispatch 不会在多个组件的多次调用
				
				② 页面刷新后，获取的就是最新的信息，
		
		
		
		
		
		
		
		
		
		
		